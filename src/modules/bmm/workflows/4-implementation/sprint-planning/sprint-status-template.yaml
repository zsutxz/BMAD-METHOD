# Sprint Status Template
# This is an EXAMPLE showing the expected format
# The actual file will be generated with all epics/stories from your epic files

# generated: {date}
# project: {project_name}
# project_key: {project_key}
# tracking_system: {tracking_system}
# story_location: {story_location}

# STATUS DEFINITIONS:
# ==================
# Epic Status:
#   - backlog: Epic exists in epic file but not contexted
#   - contexted: Next epic tech context created by *epic-tech-context (required)
#
# Story Status:
#   - backlog: Story only exists in epic file
#   - drafted: Story file created in stories folder by *create-story
#   - ready-for-dev: Draft approved and story context created by *story-ready
#   - in-progress: Developer actively working on implementation by *dev-story
#   - review: Implementation complete, ready for review by *code-review
#   - done: Story completed by *story-done
#
# Retrospective Status:
#   - optional: Can be completed but not required
#   - completed: Retrospective has been done by *retrospective
#
# WORKFLOW NOTES:
# ===============
# - Epics should be 'contexted' before stories can be 'drafted'
# - SM typically drafts next story ONLY after previous one is 'done' to incorporate learnings
# - Dev moves story to 'review', dev reviews, then Dev moves to 'done'

# EXAMPLE STRUCTURE (your actual epics/stories will replace these):

generated: 05-06-2-2025 21:30
project: My Awesome Project
project_key: jira-1234
tracking_system: file-system
story_location: "{project-root}/docs/stories"

development_status:
  epic-1: contexted
  1-1-user-authentication: done
  1-2-account-management: drafted
  1-3-plant-data-model: backlog
  1-4-add-plant-manual: backlog
  epic-1-retrospective: optional

  epic-2: backlog
  2-1-personality-system: backlog
  2-2-chat-interface: backlog
  2-3-llm-integration: backlog
  epic-2-retrospective: optional
